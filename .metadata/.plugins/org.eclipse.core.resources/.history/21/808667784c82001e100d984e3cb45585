package com.cgpm.api.services;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.CollectionUtils;
import org.springframework.util.ObjectUtils;

import com.cgpm.api.base.BaseService;
import com.cgpm.api.model.dto.ProjetoDTO;
import com.cgpm.api.model.entities.Projeto;
import com.cgpm.api.model.type.StatusType;
import com.cgpm.api.repositories.ProjetoRepository;

/**
 * @author michel.pech
 */

@Service
public class ProjetoService extends BaseService<Projeto, Long> {
	
	@Autowired
	private ProjetoRepository repository;
	
	public void removerProjeto(ProjetoDTO projeto) {		
		Projeto entity = repository.getJpa().findById(projeto.getId()).orElse(null);
		if (ObjectUtils.isEmpty(entity)) {
			throw new RuntimeException("Projeto " + projeto.getId() + " não encontrado no banco de dados");
		}
		
		
		
	}
	
	private void validaExclusao(Projeto entity) {
		List<StatusType> statusList = new ArrayList<>();
		
		statusList.add(StatusType.INICIADO);
		statusList.add(StatusType.ANDAMENTO);
		statusList.add(StatusType.ENCERRADO);
		
		StatusType statusProjeto = statusList.stream().filter(s -> s.name().equals(entity.getStatus())).findFirst().orElse(null);
		if (!ObjectUtils.isEmpty(statusProjeto)) {
			throw new RuntimeException("Status do projeto, " + statusProjeto.getDescricao() + ", não permite exclusão." );
		}
	}
}
