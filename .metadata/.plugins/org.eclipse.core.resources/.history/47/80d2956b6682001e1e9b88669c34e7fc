package com.cgpm.api.services;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.ObjectUtils;

import com.cgpm.api.model.entities.Membro;
import com.cgpm.api.model.entities.Pessoa;
import com.cgpm.api.model.entities.Projeto;
import com.cgpm.api.repositories.MembroRepository;

import jakarta.transaction.Transactional;

/**
 * @author michel.pech
 */

@Service
public class MembroService {
	
	@Autowired
	private MembroRepository repository;
	
	@Transactional
	public List<Membro> findAll() {
		return repository.getJpa().findAll();
	}

	@Transactional
	public Optional<Membro> findById(Projeto id) {
		return repository.getJpa().findById(id);
	}	

	@Transactional
	public Membro update(Membro entity) {
		return repository.getJpa().saveAndFlush(entity);
	}

	@Transactional
	public void deleteById(Projeto id) {
		repository.getJpa().deleteById(id);
	}		
	
	@Transactional
	public Membro insert(Membro entity) {		
		validaFuncionario(entity.getPessoa());
		
		return this.insert(entity);
	}
	
	private void validaFuncionario(Pessoa pessoa) {
		if (!ObjectUtils.isEmpty(pessoa) && !pessoa.getFuncionario()) {
			throw new RuntimeException(pessoa.getNome() + " não pode ser associada pois não é funcionário(a).");
		}
	}
}
