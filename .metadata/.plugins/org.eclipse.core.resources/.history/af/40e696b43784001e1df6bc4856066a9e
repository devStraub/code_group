package com.cgpm.api.services;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.ObjectUtils;

import com.cgpm.api.base.BaseService;
import com.cgpm.api.model.entities.Projeto;
import com.cgpm.api.repositories.ProjetoRepository;

import io.micrometer.common.util.StringUtils;
import jakarta.transaction.Transactional;

/**
 * @author michel.pech
 */

@Service
public class ProjetoService extends BaseService<Projeto, Long> {
	
	@Autowired
	private ProjetoRepository repository;
	
	@Transactional
	@Override
	public Projeto insert(Projeto entity) {
		if (StringUtils.isBlank(entity.getNome()) ||
		    ObjectUtils.isEmpty(entity.getGerente())) {
			
			throw new RuntimeException("Obrigat처rio informar Nome e Gerente");
		}
		
        return repository.getJpa().saveAndFlush(entity);		
	}	
	
	public void deleteById(Projeto projeto) {		
		Projeto entity = repository.getJpa().findById(projeto.getId()).orElse(null);
		if (ObjectUtils.isEmpty(entity)) {
			throw new RuntimeException("Projeto " + projeto.getId() + " n찾o encontrado no banco de dados");
		}
		
		validaExclusao(entity);
		
		this.deleteById(entity.getId());
	}
	
	public boolean validaExclusao(Projeto entity) {
		List<String> statusList = new ArrayList<>();
		
		statusList.add("INICIADO");
		statusList.add("ANDAMENTO");
		statusList.add("ENCERRADO");
		
		String statusProjeto = statusList.stream().filter(s -> s.equals(entity.getStatus())).findFirst().orElse(null);
		if (!ObjectUtils.isEmpty(statusProjeto)) {
			throw new RuntimeException("Status do projeto, " + statusProjeto + ", n찾o permite exclus찾o." );
		}
		
		return true;
	}
	
}
